{
    "docs": [
        {
            "location": "/", 
            "text": "Team Waterloop\n\n\nCanada's Hyperloop, designed and built at the University of Waterloo.\nThis is the documentation hub for all components of our pod.\n\n\nThis site is not intended for sharing outside of the team.\n\n\nAdding documentation\n\n\n\n\n\n\ngit clone https://github.com/teamwaterloop/docs\n\n\n\n\n\n\nEdit the relevant files in the \ndocs\n folder. Files are written in \n    \nMarkdown\n, with a couple of \n    \nextensions\n.\n\n\n\n\n\n\nModify the navigation bar in \nmkdocs.yml\n as necessary.\n\n\n\n\n\n\ngit commit -m \"\na brief descriptive message about what you added\n\"\n\n\n\n\n\n\ngit push origin master\n\n\n\n\n\n\nAfter pushing, the updated documentation will be compiled and deployed to \n\ndocs.teamwaterloop.ca\n within a couple of minutes.\n\n\nBuilding locally\n\n\nTo build locally, you need to first install Python, then do the following:\n\n\n\n\n\n\npip install mkdocs mkdocs-cinder\n\n\n\n\n\n\nmkdocs build\n\n\n\n\n\n\ncd site\n\n\n\n\n\n\nIf Python 3: \npython -m http.server 4000\n, if Python 2: \npython -m SimpleHTTPServer 4000\n\n\n\n\n\n\nAnd then navigate to \nlocalhost:4000\n to see your work!", 
            "title": "Home"
        }, 
        {
            "location": "/#team-waterloop", 
            "text": "Canada's Hyperloop, designed and built at the University of Waterloo.\nThis is the documentation hub for all components of our pod.  This site is not intended for sharing outside of the team.", 
            "title": "Team Waterloop"
        }, 
        {
            "location": "/#adding-documentation", 
            "text": "git clone https://github.com/teamwaterloop/docs    Edit the relevant files in the  docs  folder. Files are written in \n     Markdown , with a couple of \n     extensions .    Modify the navigation bar in  mkdocs.yml  as necessary.    git commit -m \" a brief descriptive message about what you added \"    git push origin master    After pushing, the updated documentation will be compiled and deployed to  docs.teamwaterloop.ca  within a couple of minutes.", 
            "title": "Adding documentation"
        }, 
        {
            "location": "/#building-locally", 
            "text": "To build locally, you need to first install Python, then do the following:    pip install mkdocs mkdocs-cinder    mkdocs build    cd site    If Python 3:  python -m http.server 4000 , if Python 2:  python -m SimpleHTTPServer 4000    And then navigate to  localhost:4000  to see your work!", 
            "title": "Building locally"
        }, 
        {
            "location": "/software-systems/", 
            "text": "Software Systems\n\n\nOur \nSuperdoc\n \nis currently our main source of information; that will slowly be migrated here.\n\n\nComms Interfaces\n\n\n\n\n\n\nArduino-Electrical interface: \nPinout\n\n\n\n\n\n\nRaspberry Pi-Arduino interface: \nSerial Comms Spec\n\n\n\n\n\n\nDashboard-Raspberry Pi interface: WebSocket Comms Spec???\n\n\n\n\n\n\nRaspberry Pi setup tutorial and configurations\n\n\n\n\nInitial Note: We are using a RPi3, so we have wifi module built in. If you are using an older RPi, then you might have to adjust certain things like the name of your wireless device.\n\n\n\n\n\n\nFlash an OS onto your RPi\n. We are using Raspbian OS because it's the most well-supported RPi OS, and it has a GUI which could be helpful when resolving problems in networking.\n\n\nEnable SSH on RPi\n\n\nNode should come pre-installed, you can check if it is installed by running \nnode -v\n any version above 4.2 should be suitable\n\n\nIf your version is below 4.2, then you should update node:\n\n\n\n\nsudo npm cache clean -f\nsudo npm install -g n\nsudo n stable\n\n\n\n\n\n\nMake sure you have npm installed properly by observing the output of \nnpm -v\n.\n\n\nInstall the \npm2\n process manager globally. \nsudo npm install -g pm2\n\n\nConfigure pm2 to start \nserver.js\n on boot\n\n\n\n\n pm2 startup systemd\nOutput\n[PM2] Init System found: systemd\n[PM2] You have to run this command as root. Execute the following command:\nsudo env PATH=$PATH:/usr/bin /usr/lib/node_modules/pm2/bin/pm2 startup systemd -u sammy --hp /home/sammy\n\n\n\n\n\n\nYou have to run the command as directed in the output\n\n\nRun server with PM2 \n\n\n\n\npm2 start server.js\npm2 save\n\n\n\n\n\n\n\n\nNow the server will start on boot, and logs can be retrieved via \npm2 logs\n.\n\n\n\n\n\n\nSet a static ip on the RPi:\n\n\n\n\nConfigure DHCPD: \nsudo nano /etc/dhcpcd.conf\n\n\nAt the very bottom of the file, add the following lines:\n\n\n\n\ninterface wlan0\n\nstatic ip_address=192.168.0.200/24\nstatic routers=192.168.0.1\nstatic domain_name_servers=192.168.0.1\n\n\n\n\n\n\nReboot \nsudo reboot\n and check that it worked \nifconfig\n under wlan0 interface you should see your specified IP address.\n\n\n\n\n wlan0     Link encap:Ethernet  HWaddr 00:0F:20:CF:8B:42\n           inet addr:192.168.0.1  Bcast:217.149.127.63  Mask:255.255.255.192\n           UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1\n           RX packets:2472694671 errors:1 dropped:0 overruns:0 frame:0\n           TX packets:44641779 errors:0 dropped:0 overruns:0 carrier:0\n           collisions:0 txqueuelen:1000\n\n\n\n\n\n\nNOTE:\n Wifi is being used for convenience. For competition, we need to use interface \neth0\n, since RPi will be connected to the SpaceX NAP.\nSpaceX allows us to use 192.168.0.6-254 inclusive. Gateway is 192.168.0.1. DHCP and DNS are not available.", 
            "title": "Software Systems"
        }, 
        {
            "location": "/software-systems/#software-systems", 
            "text": "Our  Superdoc  \nis currently our main source of information; that will slowly be migrated here.", 
            "title": "Software Systems"
        }, 
        {
            "location": "/software-systems/#comms-interfaces", 
            "text": "Arduino-Electrical interface:  Pinout    Raspberry Pi-Arduino interface:  Serial Comms Spec    Dashboard-Raspberry Pi interface: WebSocket Comms Spec???", 
            "title": "Comms Interfaces"
        }, 
        {
            "location": "/software-systems/#raspberry-pi-setup-tutorial-and-configurations", 
            "text": "Initial Note: We are using a RPi3, so we have wifi module built in. If you are using an older RPi, then you might have to adjust certain things like the name of your wireless device.    Flash an OS onto your RPi . We are using Raspbian OS because it's the most well-supported RPi OS, and it has a GUI which could be helpful when resolving problems in networking.  Enable SSH on RPi  Node should come pre-installed, you can check if it is installed by running  node -v  any version above 4.2 should be suitable  If your version is below 4.2, then you should update node:   sudo npm cache clean -f\nsudo npm install -g n\nsudo n stable   Make sure you have npm installed properly by observing the output of  npm -v .  Install the  pm2  process manager globally.  sudo npm install -g pm2  Configure pm2 to start  server.js  on boot    pm2 startup systemd\nOutput\n[PM2] Init System found: systemd\n[PM2] You have to run this command as root. Execute the following command:\nsudo env PATH=$PATH:/usr/bin /usr/lib/node_modules/pm2/bin/pm2 startup systemd -u sammy --hp /home/sammy   You have to run the command as directed in the output  Run server with PM2    pm2 start server.js\npm2 save    Now the server will start on boot, and logs can be retrieved via  pm2 logs .    Set a static ip on the RPi:   Configure DHCPD:  sudo nano /etc/dhcpcd.conf  At the very bottom of the file, add the following lines:   interface wlan0\n\nstatic ip_address=192.168.0.200/24\nstatic routers=192.168.0.1\nstatic domain_name_servers=192.168.0.1   Reboot  sudo reboot  and check that it worked  ifconfig  under wlan0 interface you should see your specified IP address.    wlan0     Link encap:Ethernet  HWaddr 00:0F:20:CF:8B:42\n           inet addr:192.168.0.1  Bcast:217.149.127.63  Mask:255.255.255.192\n           UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1\n           RX packets:2472694671 errors:1 dropped:0 overruns:0 frame:0\n           TX packets:44641779 errors:0 dropped:0 overruns:0 carrier:0\n           collisions:0 txqueuelen:1000   NOTE:  Wifi is being used for convenience. For competition, we need to use interface  eth0 , since RPi will be connected to the SpaceX NAP.\nSpaceX allows us to use 192.168.0.6-254 inclusive. Gateway is 192.168.0.1. DHCP and DNS are not available.", 
            "title": "Raspberry Pi setup tutorial and configurations"
        }
    ]
}